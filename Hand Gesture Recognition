"""
hand_gesture_recognition.py
Real-time hand gesture recognition using MediaPipe + OpenCV
"""

import cv2
import mediapipe as mp
import numpy as np

# Initialize MediaPipe Hands
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils
hands = mp_hands.Hands(max_num_hands=1, min_detection_confidence=0.7)

# Function to detect gesture
def detect_gesture(landmarks):
    thumb_tip = landmarks[4].y
    index_tip = landmarks[8].y
    middle_tip = landmarks[12].y
    ring_tip = landmarks[16].y
    pinky_tip = landmarks[20].y

    # Calculate distances or relative positions
    # Gesture 1: Thumbs Up 👍
    if landmarks[4].y < landmarks[3].y and all(landmarks[i].y > landmarks[5].y for i in [8, 12, 16, 20]):
        return "👍 Thumbs Up"

    # Gesture 2: Fist ✊
    if all(landmarks[i].y > landmarks[5].y for i in [8, 12, 16, 20]) and landmarks[4].y > landmarks[3].y:
        return "✊ Fist"

    # Gesture 3: Victory ✌️
    if (landmarks[8].y < landmarks[6].y and landmarks[12].y < landmarks[10].y and
        landmarks[16].y > landmarks[14].y and landmarks[20].y > landmarks[18].y):
        return "✌️ Victory"

    # Gesture 4: Open Palm ✋
    if all(landmarks[i].y < landmarks[i - 2].y for i in [8, 12, 16, 20]) and landmarks[4].x < landmarks[3].x:
        return "🖐️ Open Palm"

    return "🤔 Unknown Gesture"

# Start webcam
cap = cv2.VideoCapture(0)
print("🖐️ Starting Hand Gesture Recognition. Press 'q' to quit.")

while cap.isOpened():
    success, frame = cap.read()
    if not success:
        print("⚠️ Camera read failed.")
        break

    # Flip image horizontally for mirror view
    frame = cv2.flip(frame, 1)
    rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = hands.process(rgb)

    gesture = "No Hand Detected"

    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            mp_drawing.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)
            landmarks = hand_landmarks.landmark
            gesture = detect_gesture(landmarks)

    # Display gesture name
    cv2.putText(frame, f"Gesture: {gesture}", (20, 40),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)

    cv2.imshow('Hand Gesture Recognition', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
