import java.io.File;
import java.io.IOException;
import java.nio.file.*;
import java.util.HashMap;
import java.util.Map;

public class FileOrganizerBot {

    public static void main(String[] args) {
        // 🔧 Change this path to the folder you want to organize
        String folderPath = "C:/Users/YourName/Downloads"; 

        organizeFiles(folderPath);
    }

    public static void organizeFiles(String folderPath) {
        File folder = new File(folderPath);

        if (!folder.exists() || !folder.isDirectory()) {
            System.out.println("❌ Invalid folder path!");
            return;
        }

        // 📂 Define file type categories
        Map<String, String> fileTypes = new HashMap<>();
        fileTypes.put("jpg", "Pictures");
        fileTypes.put("jpeg", "Pictures");
        fileTypes.put("png", "Pictures");
        fileTypes.put("gif", "Pictures");
        fileTypes.put("mp4", "Videos");
        fileTypes.put("mkv", "Videos");
        fileTypes.put("mp3", "Music");
        fileTypes.put("wav", "Music");
        fileTypes.put("pdf", "Documents");
        fileTypes.put("docx", "Documents");
        fileTypes.put("txt", "Documents");
        fileTypes.put("zip", "Compressed");
        fileTypes.put("rar", "Compressed");
        fileTypes.put("exe", "Applications");
        fileTypes.put("msi", "Applications");
        fileTypes.put("apk", "Applications");

        File[] files = folder.listFiles();

        if (files == null) {
            System.out.println("⚠️ No files found in the folder.");
            return;
        }

        System.out.println("🚀 Organizing files in: " + folderPath);
        int movedCount = 0;

        for (File file : files) {
            if (file.isFile()) {
                String extension = getFileExtension(file.getName()).toLowerCase();
                String category = fileTypes.getOrDefault(extension, "Others");

                File newDir = new File(folderPath + "/" + category);
                if (!newDir.exists()) {
                    newDir.mkdirs();
                }

                try {
                    Path newPath = Paths.get(newDir.getAbsolutePath() + "/" + file.getName());
                    Files.move(file.toPath(), newPath, StandardCopyOption.REPLACE_EXISTING);
                    System.out.println("✅ Moved: " + file.getName() + " → " + category);
                    movedCount++;
                } catch (IOException e) {
                    System.out.println("⚠️ Could not move file: " + file.getName());
                }
            }
        }

        System.out.println("\n✨ Done! " + movedCount + " files organized successfully.");
    }

    private static String getFileExtension(String fileName) {
        int index = fileName.lastIndexOf('.');
        if (index > 0 && index < fileName.length() - 1) {
            return fileName.substring(index + 1);
        }
        return "";
    }
}
